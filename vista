package Vista;
 
import Controlador.ControladorVideojuego;
import java.awt.HeadlessException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
 
public class VistaVideojuego extends javax.swing.JFrame {
 
    ControladorVideojuego controlador;
 
    public VistaVideojuego() {
        super("Sistema de Cotizacion de Videojuegos");
        initComponents();
        controlador = new ControladorVideojuego();
        this.muestraTabla();
        this.setLocationRelativeTo(null);
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
 
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtdesarrollador = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbplataforma = new javax.swing.JComboBox<>();
        Insertar = new javax.swing.JButton();
        Actualizar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbedicion = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbformato = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        chdlc = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Cotizar = new javax.swing.JButton();
        CalcularPrecio = new javax.swing.JButton();
        spnprecio = new javax.swing.JSpinner();
        spncantidad = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
 
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
 
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));
 
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
 
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Nombre:");
 
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Desarrollador:");
 
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Plataforma:");
 
        cbplataforma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PC", "Xbox", "PlayStation", "Nintendo" }));
 
        Insertar.setText("Insertar");
        Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarActionPerformed(evt);
            }
        });
 
        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });
 
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
 
        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtdesarrollador, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(txtnombre)
                            .addComponent(cbplataforma, 0, 1, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtdesarrollador, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbplataforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Insertar)
                    .addComponent(Actualizar)
                    .addComponent(Eliminar))
                .addContainerGap())
        );
 
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
 
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Edicion:");
 
        cbedicion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Gold", "Deluxe", "Collector", "Ultimate" }));
 
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Formato:");
 
        cbformato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fisico", "Digital" }));
 
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("DLC's:");
 
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Precio base:");
 
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Cantidad:");
 
        Cotizar.setText("Cotizar");
        Cotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CotizarActionPerformed(evt);
            }
        });
 
        CalcularPrecio.setText("Calcular Precio");
        CalcularPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularPrecioActionPerformed(evt);
            }
        });
 
        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(25, 25, 25)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spnprecio, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(spncantidad)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(69, 69, 69)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chdlc)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbformato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbedicion, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CalcularPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cotizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(19, 19, 19))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbedicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbformato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(chdlc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spnprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spncantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(CalcularPrecio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cotizar)
                .addContainerGap())
        );
 
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
 
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3))
        );
 
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle"));
 
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Desarrollador", "Plataforma", "Edicion", "Formato", "DLC's", "Precio Base", "Cantidad", "Total"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
 
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
 
        pack();
    }// </editor-fold>                        
 
    private void InsertarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        boolean guardar = true;
        String mensaje = "";
        String nombre = txtnombre.getText();
        String desarrollador = txtdesarrollador.getText();
        String plataforma = cbplataforma.getSelectedItem().toString();
        String edicion = cbedicion.getSelectedItem().toString();
        String formato = cbformato.getSelectedItem().toString();
        boolean dlc = chdlc.isSelected();
        double precio = 0.0;
 
        try {
            precio = ((Number) spnprecio.getValue()).doubleValue();
        } catch (Exception e) {
            guardar = false;
            mensaje += "Ingrese un precio válido.\n";
        }
 
        if (nombre.isEmpty()) {
            guardar = false;
            mensaje += "Ingrese el nombre del videojuego.\n";
        }
 
        if (guardar) {
            controlador.insertar(nombre, desarrollador, plataforma, edicion, formato, dlc, precio);
            limpiarCampos();
            this.muestraTabla(); // Actualiza la tabla después de insertar
        } else {
            JOptionPane.showMessageDialog(null, mensaje);
        }
    }                                        
 
    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try {
            String nombre = txtnombre.getText();
            String desarrollador = txtdesarrollador.getText();
            String plataforma = cbplataforma.getSelectedItem().toString();
            String edicion = cbedicion.getSelectedItem().toString();
            String formato = cbformato.getSelectedItem().toString();
            boolean dlc = chdlc.isSelected();
            double precio = (Double) spnprecio.getValue();
 
            controlador.actualizarFila(nombre, desarrollador, plataforma, edicion, formato, dlc, precio);
            limpiarCampos();
            this.muestraTabla(); // Actualiza la tabla después de la actualización
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage() + "\nIntentelo nuevamente", "Error en la operación", JOptionPane.ERROR_MESSAGE);
        }
    }                                          
 
    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        int fila = tabla.getSelectedRow();
 
        if (fila < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla");
        } else {
            String nombre = (String) model.getValueAt(fila, 0);
            int confirmar = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea eliminar el videojuego " + nombre + "?");
 
            if (JOptionPane.OK_OPTION == confirmar) {
                if (controlador.eliminarFila(nombre) == 1) {
                    model.removeRow(fila); // Elimina la fila de la tabla
                    JOptionPane.showMessageDialog(null, "Videojuego eliminado");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el videojuego");
                }
            }
            muestraTabla();
        }
    }                                        
 
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {                                   
        int filaSeleccionada;
        try {
            filaSeleccionada = tabla.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila");
            } else {
                DefaultTableModel modeloTabla = (DefaultTableModel) tabla.getModel();
                txtnombre.setEnabled(false); // Deshabilitar campo de nombre para edición
                txtnombre.setText((String) modeloTabla.getValueAt(filaSeleccionada, 0));
                txtdesarrollador.setText((String) modeloTabla.getValueAt(filaSeleccionada, 1));
                cbplataforma.setSelectedItem(modeloTabla.getValueAt(filaSeleccionada, 2).toString());
                cbedicion.setSelectedItem(modeloTabla.getValueAt(filaSeleccionada, 3).toString());
                cbformato.setSelectedItem(modeloTabla.getValueAt(filaSeleccionada, 4).toString());
                chdlc.setSelected(modeloTabla.getValueAt(filaSeleccionada, 5).toString().equals("Sí"));
                spnprecio.setValue(Double.parseDouble(modeloTabla.getValueAt(filaSeleccionada, 6).toString()));
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage() + "\nIntentelo nuevamente",
                                          "Error en la operación", JOptionPane.ERROR_MESSAGE);
        }
    }                                  
 
    private void CotizarActionPerformed(java.awt.event.ActionEvent evt) {                                        
        try {
            int filaSeleccionada = tabla.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Seleccione un videojuego de la tabla");
            } else {
                int cantidad = (int) spncantidad.getValue();
                if (cantidad <= 0) {
                    JOptionPane.showMessageDialog(null, "Ingrese una cantidad válida");
                    return;
                }
 
                DefaultTableModel modeloTabla = (DefaultTableModel) tabla.getModel();
                String precioString = (String) modeloTabla.getValueAt(filaSeleccionada, 6);
                double precio = Double.parseDouble(precioString);
                double total = precio * cantidad;
                modeloTabla.setValueAt(String.valueOf(cantidad), filaSeleccionada, 7);  // Columna de Cantidad
                modeloTabla.setValueAt(String.valueOf(total), filaSeleccionada, 8);     // Columna de Total
 
                JOptionPane.showMessageDialog(null, "El costo total por " + cantidad + " unidad(es) de " + 
                    modeloTabla.getValueAt(filaSeleccionada, 0) + " es: $" + total);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad válida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                       
 
    private void CalcularPrecioActionPerformed(java.awt.event.ActionEvent evt) {                                               
        try {
            int filaSeleccionada = tabla.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Seleccione un videojuego de la tabla");
            } else {
                DefaultTableModel modeloTabla = (DefaultTableModel) tabla.getModel();
                String precioString = (String) modeloTabla.getValueAt(filaSeleccionada, 6);
                double precio = Double.parseDouble(precioString);
                int cantidad = (int) spncantidad.getValue();
                double total = precio * cantidad;
                JOptionPane.showMessageDialog(null, "El costo total por " + cantidad + " unidad(es) es: $" + total);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
        }
    }                                              
 
    private void muestraTabla() {
eliminarTabla();
    String consulta = "SELECT nombre, desarrollador, plataforma, edicion, formato, dlc, precio_base FROM videojuegos";
 
    ResultSet res = null;
    String[] datos = new String[9];
    DefaultTableModel modeloTabla = new DefaultTableModel();
 
    modeloTabla.addColumn("Nombre");
    modeloTabla.addColumn("Desarrollador");
    modeloTabla.addColumn("Plataforma");
    modeloTabla.addColumn("Edición");
    modeloTabla.addColumn("Formato");
    modeloTabla.addColumn("DLC");
    modeloTabla.addColumn("Precio");
    modeloTabla.addColumn("Cantidad");
    modeloTabla.addColumn("Total");
    tabla.setModel(modeloTabla);
 
    try {
        res = controlador.consultar(consulta);
        while (res.next()) {
            datos[0] = res.getString(1);  // Nombre
            datos[1] = res.getString(2);  // Desarrollador
            datos[2] = res.getString(3);  // Plataforma
            datos[3] = res.getString(4);  // Edición
            datos[4] = res.getString(5);  // Formato
            datos[5] = res.getBoolean(6) ? "Sí" : "No";  // DLC
            datos[6] = String.valueOf(res.getDouble(7));  // Precio base
            datos[7] = "0";  // Cantidad
            datos[8] = "0";  // Total
 
            modeloTabla.addRow(datos);
        }
    } catch (SQLException ex) {
        Logger.getLogger(VistaVideojuego.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            if (res != null) res.close();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }
    }
 
    private void eliminarTabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tabla.getModel();
        int filas = tabla.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modeloTabla.removeRow(i);
        }
    }
 
    private void limpiarCampos() {
        txtnombre.setText("");
        txtdesarrollador.setText("");
        cbplataforma.setSelectedIndex(0);
        cbedicion.setSelectedIndex(0);
        cbformato.setSelectedIndex(0);
        spnprecio.setValue(0);
        chdlc.setSelected(false);
        //txtnombre.setEnabled(true);
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
 
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaVideojuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaVideojuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaVideojuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaVideojuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaVideojuego().setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify                     
    private javax.swing.JButton Actualizar;
    private javax.swing.JButton CalcularPrecio;
    private javax.swing.JButton Cotizar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Insertar;
    private javax.swing.JComboBox<String> cbedicion;
    private javax.swing.JComboBox<String> cbformato;
    private javax.swing.JComboBox<String> cbplataforma;
    private javax.swing.JCheckBox chdlc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spncantidad;
    private javax.swing.JSpinner spnprecio;
    private static javax.swing.JTable tabla;
    private javax.swing.JTextField txtdesarrollador;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration                   
}
 
 
package Modelo;
 
public class ModeloVideojuego {
    private String nombre;
    private String desarrollador;
    private String plataforma;
    private String edicion;
    private String formato;
    private boolean dlc;
    private double precio;
 
    public ModeloVideojuego() {
    }
 
    public ModeloVideojuego(String nombre, String desarrollador, String plataforma, String edicion, String formato, boolean dlc, double precio) {
        this.nombre = nombre;
        this.desarrollador = desarrollador;
        this.plataforma = plataforma;
        this.edicion = edicion;
        this.formato = formato;
        this.dlc = dlc;
        this.precio = precio;
    }
 
 
    public String getNombre() {
        return nombre;
    }
 
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
 
    public String getDesarrollador() {
        return desarrollador;
    }
 
    public void setDesarrollador(String desarrollador) {
        this.desarrollador = desarrollador;
    }
 
    public String getPlataforma() {
        return plataforma;
    }
 
    public void setPlataforma(String plataforma) {
        this.plataforma = plataforma;
    }
 
    public String getEdicion() {
        return edicion;
    }
 
    public void setEdicion(String edicion) {
        this.edicion = edicion;
    }
 
    public String getFormato() {
        return formato;
    }
 
    public void setFormato(String formato) {
        this.formato = formato;
    }
 
    public boolean isDlc() {
        return dlc;
    }
 
    public void setDlc(boolean dlc) {
        this.dlc = dlc;
    }
 
    public double getPrecio() {
        return precio;
    }
 
    public void setPrecio(double precio) {
        this.precio = precio;
    }
}
 
package DB;
 
import javax.swing.JOptionPane;
import java.sql.*;
 
 
public class Conexion_BD {
    private static Connection con;
    private static final String DRIVER="com.mysql.cj.jdbc.Driver";
    private static final String USUARIO="guillermo";
    private static final String PASSWORD="MEMO1234";
    private static final String URL="jdbc:mysql://localhost:3306/videojuegos";
 
    public Conexion_BD() throws SQLException {
        con=DriverManager.getConnection(URL, USUARIO, PASSWORD);
        if(con != null);
            //JOptionPane.showMessageDialog(null, "Conexion exitosa");
    }
 
    public Connection getCon(){
        return con;
    }
 
    public static void desconectar(){
        con =null;
        if(con==null);
            //JOptionPane.showMessageDialog(null, "Conexion Terminnada");
    }
 
    public static void consultar(){
        try{
            Statement sentencia;
            ResultSet res;
            sentencia=con.createStatement();
            res=sentencia.executeQuery("select nombre, plataforma, desarrollador, formato, edicion, dlc, precio_base from videojuegos");
            ResultSetMetaData metaDatos = res.getMetaData();
            int nCol = metaDatos.getColumnCount();
 
            System.out.println("Tabla Cotizacion Videojuegos");
            while (res.next()){
                for (int i = 1; i <= nCol; i++) {
                    System.out.printf("%-16s\t", res.getObject(i));
                }
                System.out.println("");
            }
 
        }catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }
    public static void main(String[] args) throws SQLException{
        Conexion_BD CBD = new Conexion_BD();
        consultar();
        desconectar();
    }
 
}
 
package Controlador;
 
public interface var_conex {
 
    public static final String DRIVER = "com.mysql.cj.jdbc.Driver";
    public static final String USUARIO = "guillermo";
    public static final String PASSWORD = "MEMO1234";
    public static final String URL = "jdbc:mysql://localhost:3306/videojuegos";
}
 
package Controlador;
 
import Modelo.ModeloVideojuego;
import Vista.VistaVideojuego;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
 
public class ControladorVideojuego {
 
    private final Conexion conectar;
    private final ModeloVideojuego modelo;
    private Connection con;
    PreparedStatement ps = null;
    String sql = null;
    ResultSet res = null;
 
    public ControladorVideojuego() {
        conectar = new Conexion();
        modelo = new ModeloVideojuego();
    }
 
    public void insertar(String nombre, String desarrollador, String plataforma, String edicion,
            String formato, boolean dlc, double precio) {
        modelo.setNombre(nombre);
        modelo.setDesarrollador(desarrollador);
        modelo.setPlataforma(plataforma);
        modelo.setEdicion(edicion);
        modelo.setFormato(formato);
        modelo.setDlc(dlc);
        modelo.setPrecio(precio);
 
        try {
            con = conectar.getConexion();
            sql = "INSERT INTO videojuegos (nombre, desarrollador, plataforma, edicion, formato, dlc, precio_base) VALUES (?, ?, ?, ?, ?, ?, ?)";
            ps = con.prepareStatement(sql);
            ps.setString(1, modelo.getNombre());
            ps.setString(2, modelo.getDesarrollador());
            ps.setString(3, modelo.getPlataforma());
            ps.setString(4, modelo.getEdicion());
            ps.setString(5, modelo.getFormato());
            ps.setBoolean(6, modelo.isDlc());
            ps.setDouble(7, modelo.getPrecio());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha insertado el videojuego");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error de conexión: " + e.getMessage());
        } finally {
            try {
                ps.close(); // Cerrando Ps
                con.close(); // Cerrando la conexión
            } catch (SQLException ex) {
                System.err.println("Error: " + ex);
            }
        }
    }
 
    public ResultSet consultar(String cons) throws SQLException {
        try {
            con = conectar.getConexion();
            ps = con.prepareStatement(cons);
            res = ps.executeQuery();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al consultar: " + ex.getMessage());
        }
        return res;
    }
 
    public int eliminarFila(String nombre) {
        int val = 0;
        try {
            con = conectar.getConexion();
            sql = "DELETE FROM videojuegos WHERE nombre=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, nombre);
            val = ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro eliminado");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar: " + ex.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.err.println("Error: " + ex);
            }
        }
        return val;
    }
 
    public void actualizarFila(String nombre, String desarrollador, String plataforma, String edicion, String formato, boolean dlc, double precio) {
        modelo.setNombre(nombre);
        modelo.setDesarrollador(desarrollador);
        modelo.setPlataforma(plataforma);
        modelo.setEdicion(edicion);
        modelo.setFormato(formato);
        modelo.setDlc(dlc);
        modelo.setPrecio(precio);
 
        try {
            con = conectar.getConexion();
            sql = "UPDATE videojuegos SET desarrollador=?, plataforma=?, edicion=?, formato=?, dlc=?, precio_base=? WHERE nombre=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, modelo.getDesarrollador());
            ps.setString(2, modelo.getPlataforma());
            ps.setString(3, modelo.getEdicion());
            ps.setString(4, modelo.getFormato());
            ps.setBoolean(5, modelo.isDlc());
            ps.setDouble(6, modelo.getPrecio());
            ps.setString(7, modelo.getNombre());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha ACTUALIZADO el videojuego");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error de conexión: " + e.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.err.println("Error: " + ex);
            }
        }
    }
}
 
package Controlador;
 
import DB.Conexion_BD;
import java.util.logging.Level;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.logging.Logger;
 
public class Conexion implements var_conex {
 
    public Connection getConexion() {
        Connection con = null;
 
        try {
            // Cargar el controlador de la base de datos
            Class.forName(DRIVER);
            // Establecer la conexión con la base de datos
            con = DriverManager.getConnection(URL, USUARIO, PASSWORD);
 
            if (con != null) {
               // JOptionPane.showMessageDialog(null, "Conexión exitosa");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        return con;
    }
}
 
 
CREATE DATABASE videojuegos;
 
USE videojuegos;
 
CREATE TABLE videojuegos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    desarrollador VARCHAR(100),
    plataforma VARCHAR(50),
    edicion VARCHAR(50),
    formato VARCHAR(50),
    dlc BOOLEAN,
    precio_base DECIMAL(10, 2)
);
 
INSERT INTO videojuegos (nombre, plataforma, desarrollador,  formato, edicion, dlc, precio_base)
VALUES
('The Legend of Zelda', 'Switch', 'Nintendo', 'Físico', 'Estándar', TRUE, 59.99),
('Cyberpunk 2077', 'PC', 'CD Projekt Red', 'Digital', 'Deluxe', FALSE, 49.99);
 
DROP table videojuegos;
 
CREATE USER 'guillermo'@'localhost' IDENTIFIED BY 'MEMO1234';
 
GRANT SELECT, INSERT, UPDATE, DELETE ON videojuegos.* TO 'guillermo'@'localhost';
